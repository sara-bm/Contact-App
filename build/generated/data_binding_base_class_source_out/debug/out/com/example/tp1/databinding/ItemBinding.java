// Generated by view binder compiler. Do not edit!
package com.example.tp1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tp1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView buttonCall;

  @NonNull
  public final ImageView buttonDelete;

  @NonNull
  public final ImageView buttonEdit;

  @NonNull
  public final TextView textViewName;

  @NonNull
  public final TextView textViewNickname;

  @NonNull
  public final TextView textViewTel;

  private ItemBinding(@NonNull LinearLayout rootView, @NonNull ImageView buttonCall,
      @NonNull ImageView buttonDelete, @NonNull ImageView buttonEdit,
      @NonNull TextView textViewName, @NonNull TextView textViewNickname,
      @NonNull TextView textViewTel) {
    this.rootView = rootView;
    this.buttonCall = buttonCall;
    this.buttonDelete = buttonDelete;
    this.buttonEdit = buttonEdit;
    this.textViewName = textViewName;
    this.textViewNickname = textViewNickname;
    this.textViewTel = textViewTel;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCall;
      ImageView buttonCall = ViewBindings.findChildViewById(rootView, id);
      if (buttonCall == null) {
        break missingId;
      }

      id = R.id.buttonDelete;
      ImageView buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.buttonEdit;
      ImageView buttonEdit = ViewBindings.findChildViewById(rootView, id);
      if (buttonEdit == null) {
        break missingId;
      }

      id = R.id.textViewName;
      TextView textViewName = ViewBindings.findChildViewById(rootView, id);
      if (textViewName == null) {
        break missingId;
      }

      id = R.id.textViewNickname;
      TextView textViewNickname = ViewBindings.findChildViewById(rootView, id);
      if (textViewNickname == null) {
        break missingId;
      }

      id = R.id.textViewTel;
      TextView textViewTel = ViewBindings.findChildViewById(rootView, id);
      if (textViewTel == null) {
        break missingId;
      }

      return new ItemBinding((LinearLayout) rootView, buttonCall, buttonDelete, buttonEdit,
          textViewName, textViewNickname, textViewTel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
