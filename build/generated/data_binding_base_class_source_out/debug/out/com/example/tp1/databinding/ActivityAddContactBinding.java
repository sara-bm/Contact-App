// Generated by view binder compiler. Do not edit!
package com.example.tp1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.utils.widget.ImageFilterView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tp1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddContactBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView addContactHeading;

  @NonNull
  public final ImageView btnlogout;

  @NonNull
  public final ImageView buttonSave;

  @NonNull
  public final EditText editTextName;

  @NonNull
  public final EditText editTextNickname;

  @NonNull
  public final EditText editTextTel;

  @NonNull
  public final ImageFilterView imageFilterView;

  private ActivityAddContactBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView addContactHeading, @NonNull ImageView btnlogout,
      @NonNull ImageView buttonSave, @NonNull EditText editTextName,
      @NonNull EditText editTextNickname, @NonNull EditText editTextTel,
      @NonNull ImageFilterView imageFilterView) {
    this.rootView = rootView;
    this.addContactHeading = addContactHeading;
    this.btnlogout = btnlogout;
    this.buttonSave = buttonSave;
    this.editTextName = editTextName;
    this.editTextNickname = editTextNickname;
    this.editTextTel = editTextTel;
    this.imageFilterView = imageFilterView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddContactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddContactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_contact, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddContactBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addContactHeading;
      TextView addContactHeading = ViewBindings.findChildViewById(rootView, id);
      if (addContactHeading == null) {
        break missingId;
      }

      id = R.id.btnlogout;
      ImageView btnlogout = ViewBindings.findChildViewById(rootView, id);
      if (btnlogout == null) {
        break missingId;
      }

      id = R.id.buttonSave;
      ImageView buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.editTextName;
      EditText editTextName = ViewBindings.findChildViewById(rootView, id);
      if (editTextName == null) {
        break missingId;
      }

      id = R.id.editTextNickname;
      EditText editTextNickname = ViewBindings.findChildViewById(rootView, id);
      if (editTextNickname == null) {
        break missingId;
      }

      id = R.id.editTextTel;
      EditText editTextTel = ViewBindings.findChildViewById(rootView, id);
      if (editTextTel == null) {
        break missingId;
      }

      id = R.id.imageFilterView;
      ImageFilterView imageFilterView = ViewBindings.findChildViewById(rootView, id);
      if (imageFilterView == null) {
        break missingId;
      }

      return new ActivityAddContactBinding((RelativeLayout) rootView, addContactHeading, btnlogout,
          buttonSave, editTextName, editTextNickname, editTextTel, imageFilterView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
